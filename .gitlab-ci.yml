image: node:10-buster
.shared_windows_runners:
  tags: [windows]
stages: [initiate, verify, deploy]
variables:
  GIT_DEPTH: '5'
.defs:
# only_code not used when an MR is created, hence the need for except_docs
- &only_code
  only:
    changes:
    - .gitlab-ci.yml
    - package.json
    - yarn.lock
    - gulpfile.js
    - '{gulp.d,packages,test}/**/*'
- &except_docs
  except:
  - /^docs\/./
- &yarn_cache_config
  key: yarn-cache
  paths:
  - .cache/yarn
- &yarn_cache_pull_push
  cache:
    <<: *yarn_cache_config
    policy: pull-push
- &yarn_cache_pull_only
  cache:
    <<: *yarn_cache_config
    policy: pull
- &yarn_install
  before_script:
  - yarn --cache-folder=.cache/yarn --prefer-offline --pure-lockfile > /dev/null
# this step also seeds the dependency cache
lint:
  stage: initiate
  <<: *except_docs
  <<: *only_code
  <<: *yarn_cache_pull_push
  <<: *yarn_install
  script: $(npm bin)/gulp lint
test:linux:
  stage: verify
  <<: *except_docs
  <<: *only_code
  <<: *yarn_cache_pull_only
  <<: *yarn_install
  script: $(npm bin)/gulp test
  artifacts:
    paths:
    - coverage/
test:windows:
  extends: [.shared_windows_runners]
  stage: verify
  <<: *except_docs
  <<: *only_code
  # cache does not currently work on the Windows runner
  #<<: *yarn_cache_pull_only
  before_script:
  - npx yarn --cache-folder=.cache/yarn --prefer-offline --pure-lockfile
  script: node_modules/.bin/gulp test
  artifacts:
    paths:
    - coverage/
release:
  stage: deploy
  only:
  - releases@antora/antora
  environment: releases
  before_script:
  - yarn global add lerna@$(node -p 'require("./lerna.json").lerna') > /dev/null
  - NODE_PATH=$(yarn global dir)/node_modules node scripts/patch-libnpmpublish.js
  script:
  - scripts/release.sh
  # triggers release of Docker image
  - env $(echo -en $(cat releaserc)) sh -c 'curl -o /dev/null -s -X POST -F "token=$CI_JOB_TOKEN" -F "ref=$RELEASE_BRANCH" -F "variables[ANTORA_VERSION]=$RELEASE_VERSION" $DOCKER_IMAGE_PIPELINE_TRIGGER'
